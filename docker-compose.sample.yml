services:

  # Lighthouse Notes Server - API Server for Lighthouse Notes
  server:
    image: ghcr.io/lighthousenotes/server:latest
    container_name: lighthousenotes-server
    links:
      - postgresql
      - meilisearch
      - redis
    environment:
    - AllowedHosts=*
    - Authentication__Authority=https://idp.example.com/realms/master
    - Authentication__Audience=account
    - ConnectionStrings__Database=Host=postgresql;Database=lighthousenotes;Username=lighthousenotes;Password=CHANGEME
    - ConnectionStrings__Redis=redis
    - Logging__LogLevel__Default=Warning
    - Logging__LogLevel__Microsoft.AspNetCore=Warning
    - Logging__LogLevel__Microsoft.Hosting.Lifetime=Warning
    - Sqids__MinLength=10
    - Sqids__Alphabet=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
    - Minio__Endpoint=s3.example.com
    - Minio__BucketName=lighthousenotes 
    - Minio__NetworkEncryption=true
    - Minio__AccessKey=CHAGEME
    - Minio__SecretKey=CHAGEME
    - Meilisearch__Url=http://meilisearch:7700
    - Meilisearch__Key=CHAGEME
    - Urls=http://server:6000
    - WebApp=https://app.example.com
    restart: unless-stopped

  #  Secure Web Application Gateway - Nginx & Let's Encrypt
  swag:
    image: lscr.io/linuxserver/swag:latest
    container_name: swag
    links:
      - server
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=example.com
      - VALIDATION=http
      - SUBDOMAINS=api,idp,s3
      - ONLY_SUBDOMAINS=true
    volumes:
      - ./data/swag:/config
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped

  # Keycloak - Open Source Identity and Access Management For Modern Applications and Services 
  keycloak:
    build:
      dockerfile: ./Dockerfile
    container_name: keycloak
    depends_on:
      - postgresql
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgresql/keycloak
      - KC_DB_USER=keycloak
      - KC_DB_PASSWORD=CHANGEME
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=CHANGEME
      - KC_HOSTNAME=idp.example.com
      - KC_PROXY_HEADERS=xforwarded
    command: start --optimized
    restart: unless-stopped
  
  # PostgreSQL Database - Open-source relational database
  postgresql:
    image: postgres
    container_name: postgresql
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_ROOT_PASSWORD=CHANGEME
    restart: unless-stopped

  # Minio - Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./data/minio:/data
      - ./data/swag/etc/letsencrypt/live/idp.example.com/fullchain.pem:/root/.minio/certs/public.crt
      - ./data/swag/etc/letsencrypt/live/idp.example.com/privkey.pem:/root/.minio/certs/private.key
      - ./data/swag/etc/letsencrypt/live/idp.example.com/fullchain.pem:/root/.minio/certs/CAs/public.crt
      - ./data/swag/etc/letsencrypt/live/idp.example.com/privkey.pem:/root/.minio/certs/CAs/private.key
    environment:
      - MINIO_SERVER_URL=https://s3.example.com:9000
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=CHANGEME
    command: server /data --console-address ":9001"
    restart: unless-stopped

  # Redis - in-memory data structure store,
  redis:
    image: redis
    container_name: redis
    volumes:
      -  ./data/redis:/data
    command: ["redis-server"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: unless-stopped

  # Meilisearch - flexible and powerfull search
  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:v1.6
    environment:
      - MEILI_MASTER_KEY=CHANGEME
    volumes:
      - ./data/meilisearch:/data.ms
    restart: unless-stopped